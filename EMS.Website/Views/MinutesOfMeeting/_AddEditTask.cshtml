@model MomMeetingTaskDto
@using EMS.Web.Models.Others
@using EMS.Core

<style>
    .myclas {
        margin-top: 8px;
    }

    .doc-list {
        border-left: 1px solid rgba(0,0,0,0.1);
        border-top: 1px solid rgba(0,0,0,0.1);
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

        .doc-list li {
            width: 50%;
            padding: 10px 15px;
            border-right: 1px solid rgba(0,0,0,0.1);
            border-bottom: 1px solid rgba(0,0,0,0.1);
        }

            .doc-list li a {
                word-break: break-all;
            }
</style>

@*@using (Html.BeginForm())
    {*@

@Html.Partial("_ModalHeader", new ModalHeader { Heading = @Model.Id == 0 ? "Add Action" : "Update Action" })

<div class="modal-body" id="mymodel">

    @using (Html.BeginForm("AddEditTask", "MinutesOfMeeting", FormMethod.Post, new { id = "form", enctype = "multipart/form-data" }))
    {
        @*<div id="NotificationMessage"></div>*@
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.MomMeetingId)
        <div class="row form-group required clearfix">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label class="control-label">Action</label>

                    </div>
                    <div class="col-md-8 required">
                        @Html.TextBoxFor(model => model.Task, htmlAttributes: new { @class = "form-control", @autoComplete = "off", @data_rule_required = "true", @data_msg_required = "*required" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row form-group required clearfix">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-2">
                        <label class="control-label">Assign To</label>

                    </div>
                    <div class="col-md-10">
                        @Html.ListBoxFor(model => model.Paticipants, Model.PaticipantList, htmlAttributes: new { @class = "form-control multiple ParticipantClass", @style = "padding:0px;", @autoComplete = "off", @placeholder = "-- Select Participant --", @data_rule_required = "true", @data_msg_required = "*required" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row form-group required clearfix">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label class="control-label">Target Date</label>

                    </div>
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.TargetDates, htmlAttributes: new { @class = "form-control Calender", @placeholder = "dd/mm/yyyy", @autoComplete = "off", @data_rule_required = "true", @data_msg_required = "*required" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label class="control-label">Priority</label>
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Priority, Html.GetEnumSelectList(typeof(Enums.Priority)), "---Select Type---", new { @class = "form-control", @data_rule_required = "true", @data_msg_required = "*required" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row required form-group clearfix divStatus">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        <label class="control-label">Status</label>
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Status, Html.GetEnumSelectList(typeof(Enums.MomMeetingStatus)), htmlAttributes: new { @class = "form-control", @autoComplete = "off", @data_rule_required = "true", @data_msg_required = "*required" })
                    </div>
                </div>
            </div>

        </div>
        <div class="form-group clearfix">
            <label class="control-label">Remark</label>
            @Html.TextAreaFor(model => model.Remark, 3, 5, htmlAttributes: new { @class = "form-control", @autoComplete = "off" })
        </div>

        <div class="form-group clearfix">
            <label class="control-label">Upload Documents</label>
            <input type="file" name="docs" multiple />
        </div>

        @if (Model.MomMeetingTaskDocuments.Count > 0)
        {
            <div class="row clearfix">
                <div class="col-md-12 ">
                    <ul class="doc-list">

                        @foreach (var item in Model.MomMeetingTaskDocuments)
                        {

                            <li>
                                <i class='@(item.DocumentPath.ToLower().Contains(".ppt")? "fa fa-file-powerpoint-o" : item.DocumentPath.ToLower().Contains(".doc")? "fa fa-file-word-o":item.DocumentPath.ToLower().Contains(".xls")?"fa fa-file-excel-o":item.DocumentPath.ToLower().Contains(".txt")?"fa fa-file-text-o":item.DocumentPath.ToLower().Contains(".rar")|| item.DocumentPath.ToLower().Contains(".zip")?"fa fa-file-zip-o":"fa fa-file-image-o")'></i> <a href="~/Upload/MomDocument/@item.DocumentPath.ToLower()" class="btn-link" download="download">  @item.DocumentPath </a>
                                <span><a href="javascript:;" data-href="@(SiteKey.DomainName + "MinutesOfMeeting/DeleteMomMeetingTaskDocument/" + item.Id)" class="delete-document"> <i class="fa fa-trash" style="color:red;font-size:17px;"></i></a> </span>
                            </li>
                        }
                    </ul>

                </div>
            </div>
        }

        <div id="NotificationMessage"></div>

        @Html.Partial("_ModalFooter", new ModalFooter { })
    }

    @*@await Html.PartialAsync("_ModalFooter", new ModalFooter { })*@
</div>

@*}*@


