@using EMS.Web.Models.Others
@model EMS.Dto.LeaveActivityCalenderDto
@{
    ViewBag.Title = "Detail";
}

<div class="ManageDepartment-page full-wdth clearfix">
    @using (Html.BeginForm())
    {
        <div id="frm-leave-detail">
            @Html.HiddenFor(model => model.LeaveId)
            <div class="modal-body form-horizontal fontsize12 detailboxheight">
                <div class="form-group">
                    <div class="col-md-12">
                        <div class="col-md-6">
                            <h2>Leave Details</h2>
                        </div>
                        <div class="col-md-6">
                            <h4>
                                @if (Model.IsHalf)
                                {
                                    <span> [Half Day]</span>
                                }
                            </h4>
                        </div>

                    </div>
                </div>
                <div class="form_row br_bule2">
                    <label class="col-md-3">Name : </label>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.Name)
                    </div>

                    <label class="col-md-3">Handoverd To :</label>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.HandoverTo)
                    </div>
                </div>

                <div class="form_row">
                    <label class="col-md-3">Leave Date : </label>
                    <div class="col-md-3">
                        @Model.StartDate.ToString("MMM dd, yyyy") -  @Model.EndDate.ToString("MMM dd, yyyy")
                    </div>
                    <label class="col-md-3">Apply Date : </label>
                    <div class="col-md-3">
                        @Model.DateAdded.Value.ToString("MMM dd, yyyy hh:mm tt")
                    </div>
                </div>

                <div class="form_row br_bule2">
                    <label class="col-md-3">Leave Status : </label>
                    <div class="col-md-3">
                        @Enum.GetName(typeof(EMS.Core.Enums.LeaveStatus), Model.Status)
                    </div>

                    <label class="col-md-3">Leave Type : </label>
                    <div class="col-md-3">
                        @Enum.GetName(typeof(EMS.Core.Enums.LeaveType), Model.LeaveType)
                    </div>
                </div>
                <div class="form_row">
                    <label class="col-md-3">Leave Category : </label>
                    <div class="col-md-3">
                        @Html.DisplayFor(model => model.LeaveCatagory)
                    </div>@Html.HiddenFor(model => model.LeaveCatagoryId)
                </div>

                <div class="form_row br_bule2">
                    <label class="col-md-3">Reason :  </label>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.Reason)
                    </div>
                </div>

                <div class="form_row">
                    <label class="col-md-3">Work Alternator :</label>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.WorkAlternator)
                    </div>
                </div>

                <div class="form_row br_bule2">
                    <label class="col-md-3">Remarks :</label>
                    <div class="col-md-9">
                        @Html.DisplayFor(model => model.Remark)
                    </div>
                </div>

                @if ((CurrentUser.RoleId == (int)EMS.Core.Enums.UserRoles.PM ||
                CurrentUser.RoleId == (int)EMS.Core.Enums.UserRoles.PMO ||
                RoleValidator.HR_RoleIds.Contains(CurrentUser.RoleId) ||
                RoleValidator.TL_Technical_DesignationIds.Contains(CurrentUser.DesignationId)
             || RoleValidator.TL_QualityAnalyst_DesignationIds.Contains(CurrentUser.DesignationId)
             || RoleValidator.TL_DigitalMarketing_DesignationIds.Contains(CurrentUser.DesignationId)
             || RoleValidator.TL_UIUX_DesignationIds.Contains(CurrentUser.DesignationId)
             || RoleValidator.TL_ARVRUnityGaming_DesignationIds.Contains(CurrentUser.DesignationId)
             || RoleValidator.TL_ITInfra_DesignationIds.Contains(CurrentUser.DesignationId)
             || RoleValidator.TL_Sales_DesignationIds.Contains(CurrentUser.DesignationId)
             || RoleValidator.TL_AccountsandAdmin_DesignationIds.Contains(CurrentUser.DesignationId)
                ) && Model.Uid != CurrentUser.Uid)
                {
                    if (Model.IsAllowLeave)
                    {
                       <div class="form_row">
                           <label class="col-md-3">Changes Leave Status :</label>
                           <div class="col-md-3">
                               @Html.DropDownListFor(m => m.Status, new SelectList(ViewBag.LeaveStatus, "Value", "Text", Model.Status), null, new { @class = "form-control " })
                           </div>
                       </div>
                       <div class="form_row br_bule2">
                           <label class="col-md-3">Any Comment: </label>
                           <div class="col-md-5">
                               @Html.TextAreaFor(x => x.Remark, 0, 0, new { @class = "form-control", @style = "height:60px" })
                           </div>
                       </div>
                    }
                }
            </div>

            <div class="modal-footer">
                <button data-dismiss="modal" id="Close" class="btn btn-custom pull-right" type="button">Close</button>
                @if ((CurrentUser.RoleId == (int)EMS.Core.Enums.UserRoles.PM ||
                CurrentUser.RoleId == (int)EMS.Core.Enums.UserRoles.PMO ||
                RoleValidator.HR_RoleIds.Contains(CurrentUser.RoleId) ||
                RoleValidator.TL_Technical_DesignationIds.Contains(CurrentUser.DesignationId)
            || RoleValidator.TL_QualityAnalyst_DesignationIds.Contains(CurrentUser.DesignationId)
            || RoleValidator.TL_DigitalMarketing_DesignationIds.Contains(CurrentUser.DesignationId)
            || RoleValidator.TL_UIUX_DesignationIds.Contains(CurrentUser.DesignationId)
            || RoleValidator.TL_ARVRUnityGaming_DesignationIds.Contains(CurrentUser.DesignationId)
            || RoleValidator.TL_ITInfra_DesignationIds.Contains(CurrentUser.DesignationId)
            || RoleValidator.TL_Sales_DesignationIds.Contains(CurrentUser.DesignationId)
            || RoleValidator.TL_AccountsandAdmin_DesignationIds.Contains(CurrentUser.DesignationId)
                ) && Model.Uid != CurrentUser.Uid)
                {
                    if (Model.IsAllowLeave)
                    {
                        <button class="btn btn-custom btn-pink pull-right margin-right10" id="submit" type="submit">
                            Submit
                        </button>
                    }
                }
            </div>
        </div>
    }
</div>